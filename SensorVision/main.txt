/*----------------------------------------------------------------------------*/
/*                                                                            */
/*    Module:       main.cpp                                                  */
/*    Author:       Melissa Ruiz                                              */
/*    Created:      9/20/2024, 11:47:40 AM                                    */
/*    Description:  V5 project                                                */
/*                                                                            */
/*----------------------------------------------------------------------------*/
#include "vex.h"

using namespace vex;

// Configuración del cerebro, motor y sensor de visión
brain Brain;                
motor LeftMotor1(PORT1, false);
motor LeftMotor2(PORT2, false);
motor LeftMotor3(PORT11, false);
motor LeftMotor4(PORT12, false);

motor RightMotor1(PORT9, true);
motor RightMotor2(PORT10, true);
motor RightMotor3(PORT19, true);
motor RightMotor4(PORT20, true);

motor_group Izquierda = motor_group(LeftMotor1, LeftMotor2, LeftMotor3, LeftMotor4); 
motor_group Derecha = motor_group(RightMotor1, RightMotor2, RightMotor3, RightMotor4); 



// Definición de la firma del color azul (ajusta estos valores si es necesario)
vex::vision::signature BLUE_OBJECT = vex::vision::signature(1, -3001, -1575, -2288, 5485, 10763, 8114, 3, 0); // Signature para el color azul

vision VisionSensor(PORT3, 50, BLUE_OBJECT); // Asignación del sensor de visión al puerto 3

void detectBlueObject() {
    // Elimina la llamada a setSignature si ya está configurada la firma
    // VisionSensor.setSignature(1, BLUE_OBJECT);
    
    while (true) {
        // Captura un frame y analiza cuántos objetos azules hay
        int numObjects = VisionSensor.takeSnapshot(BLUE_OBJECT);
        
        // Si se detectaron objetos
        if (numObjects > 0 && VisionSensor.largestObject.exists) {
            vision::object blueObj = VisionSensor.largestObject; // Objeto más grande detectado
            
            // Mostrar las coordenadas del objeto detectado
            Brain.Screen.print("Objeto azul detectado en: X: %d, Y: %d, Ancho: %d, Alto: %d",
                blueObj.centerX, blueObj.centerY, blueObj.width, blueObj.height);
            Brain.Screen.newLine();
            
            // Si el objeto azul está en el centro, detener motores
            if (blueObj.centerX > 140 && blueObj.centerX < 180) {
                Izquierda.stop();
                Derecha.stop();
            }
            // Si el objeto azul está a la izquierda, girar a la izquierda
            else if (blueObj.centerX < 140) {
                Izquierda.spin(reverse, 50, percent);
                Derecha.spin(forward, 50, percent);
            }
            // Si el objeto azul está a la derecha, girar a la derecha
            else if (blueObj.centerX > 180) {
                Izquierda.spin(forward, 50, percent);
                Derecha.spin(reverse, 50, percent);
            }
        } else {
            // No se detecta un objeto azul
            Brain.Screen.print("No se detecta objeto azul");
            Brain.Screen.newLine();
            Izquierda.stop();
            Derecha.stop();
        }
        
        // Esperar antes de analizar de nuevo
        wait(200, msec);
        Brain.Screen.clearScreen();
    }
}



int main() {
    // Llama a la función para detectar el objeto azul
    detectBlueObject();

    while (true) {
        wait(100, msec);
    }
}
